pattern = "\\.pdf$",
full.names = FALSE)
file_list
# Target words, new words can be added herer
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal", "lubbock")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
# Read the content of the current file
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
read_pdf <- pdf_text(file_list[i])
return(read_pdf)
for (i in 1:length(file_list)) {
read_pdf <- pdf_text(file_list[i])
return(read_pdf)
}
file_list
file_counts <- list()
rm(list = ls())
# Required library
library(stringr)
library(ggplot2)
library(dplyr)
library(pdftools)
library(tm)
pyrogeography_word_counts <- function(text, pyrogeography_words) {
text <- tolower(text)
counts <- sapply(pyrogeography_words, function(word) {
word_count <- str_count(text, regex(paste0(word)))
return(sum(word_count))
})
return(counts)
}
file_list <- list.files(path = getwd(),
pattern = "\\.pdf$",
full.names = FALSE)
file_list
# Target words, new words can be added herer
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal", "lubbock")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
print(file_counts)
class(file_counts)
total_count <- apply(as.data.frame(file_counts), 1, sum)
data_frame <- t(as.data.frame(file_counts))
reshaped_data_frame <- reshape2::melt(data_frame, value.name = "frequencey")
names(reshaped_data_frame)
final_data_for_plotting <- reshaped_data_frame %>%
rename(targeted_words = Var2) %>%
rename(individual_article = Var1) %>%
group_by(targeted_words) %>%
mutate(total_counts = sum(frequencey))
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, frequencey, color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
ggsave("../Pyrogeography/targeted_words_plot.pdf",
plot = targeted_words_plot, height = 200,
width = 260, units = "mm", dpi = 300)
# Target words, new words can be added herer
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
print(file_counts)
class(file_counts)
total_count <- apply(as.data.frame(file_counts), 1, sum)
data_frame <- t(as.data.frame(file_counts))
reshaped_data_frame <- reshape2::melt(data_frame, value.name = "frequencey")
names(reshaped_data_frame)
final_data_for_plotting <- reshaped_data_frame %>%
rename(targeted_words = Var2) %>%
rename(individual_article = Var1) %>%
group_by(targeted_words) %>%
mutate(total_counts = sum(frequencey))
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, frequencey, color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
ggsave("../Pyrogeography/targeted_words_plot.pdf",
plot = targeted_words_plot, height = 200,
width = 260, units = "mm", dpi = 300)
total_counts_of_targeted_words <- ggplot(final_data_for_plotting,
aes(targeted_words,
total_counts,
fill = targeted_words)) +
geom_bar(stat="identity", position="dodge") +
theme_bw() +
labs(x = "Targeted words",
y = "Total counts",
fill = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
total_counts_of_targeted_words
ggsave("../Pyrogeography/total_counts_of_targeted_words.pdf",
plot = total_counts_of_targeted_words, height = 200,
width = 260, units = "mm", dpi = 300)
length(reading_each_file) # checking how many of them I read
reading_each_file <- sapply(file_list, pdf_text) # reading all files
length(reading_each_file) # checking how many of them I read
lapply(reading_each_file, length) # how many files per each files
pdfdatabase <- Corpus(URISource(file_list),
readerControl = list(reader = readPDF))
pdfdatabase
most_frequent_word <- TermDocumentMatrix(pdfdatabase,
control = list(removePunctuation = TRUE,
stopwords = TRUE,
tolower = TRUE,
stemming = FALSE,
removeNumbers = TRUE,
bounds = list(global = c (3, Inf))))
inspect(most_frequent_word[1:20, ])
class(most_frequent_word)
View(most_frequent_word)
most_frequent_word
x <- findFreqTerms(most_frequent_word,
lowfreq = 3, highfreq = Inf)
y <- sort(apply(as.matrix(most_frequent_word[x,]), 1, sum),
decreasing = TRUE)
class(y)
View(y)
data_frame <- as.data.frame(y)
View(data_frame)
most_frequent_words <- data_frame %>%
rename(frequency = y) %>%
filter(frequency >= 1000)
View(most_frequent_words)
write.csv("most_frequent_words.csv",
file = most_frequent_words)
write.csv(most_frequent_words.csv,
file = "most_frequent_words.csv")
?write.csv()
write.csv(most_frequent_words.csv,
file = "most_frequent_words.csv",
path = getwd(), row.names = TRUE)
write.csv(most_frequent_words.csv,
file = "most_frequent_words.csv",
row.names = TRUE)
write.csv(most_frequent_words,
file = "most_frequent_words.csv",
row.names = TRUE)
setwd("C:/Users/tomas/OneDrive/Desktop/pyrogeography")
# Required library
library(stringr)
library(dplyr)
library(pdftools)
library(tm)
pyrogeography_word_counts <- function(text, pyrogeography_words) {
text <- tolower(text)
counts <- sapply(pyrogeography_words, function(word) {
word_count <- str_count(text, regex(paste0(word)))
return(sum(word_count))
})
return(counts)
}
file_list <- list.files(path = getwd(),
pattern = "\\.pdf$",
full.names = FALSE)
file_list
# Target words, new words can be added herer
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
print(file_counts)
class(file_counts)
print(file_counts)
class(file_counts)
total_count <- apply(as.data.frame(file_counts), 1, sum)
data_frame <- t(as.data.frame(file_counts))
reshaped_data_frame <- reshape2::melt(data_frame, value.name = "frequencey")
names(reshaped_data_frame)
final_data_for_plotting <- reshaped_data_frame %>%
rename(targeted_words = Var2) %>%
rename(individual_article = Var1) %>%
group_by(targeted_words) %>%
mutate(total_counts = sum(frequencey))
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, frequencey, color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
############################################################################
# Required libraries
############################################################################
library(ggplot2)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes( x = reorder(targeted_words, -frequencey),
frequency, color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
targeted_words_plot <- ggplot(final_data_for_plotting,
aes( x = reorder(targeted_words, -frequencey),
y = frequency, color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
View(final_data_for_plotting)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(x = reorder(targeted_words, -frequencey),
y = frequency, fill = targeted_words)) +
geom_bar() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(x = reorder(targeted_words, -frequencey),
y = frequency, fill = targeted_words)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, y = frequency,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
getwd()
ls()
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, y = frequency,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
library(ggplot2)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, y = frequency,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, frequency,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
# Required library
library(stringr)
library(dplyr)
library(pdftools)
library(tm)
pyrogeography_word_counts <- function(text, pyrogeography_words) {
text <- tolower(text)
counts <- sapply(pyrogeography_words, function(word) {
word_count <- str_count(text, regex(paste0(word)))
return(sum(word_count))
})
return(counts)
}
file_list <- list.files(path = getwd(),
pattern = "\\.pdf$",
full.names = FALSE)
file_list
# Target words, new words can be added herer
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
print(file_counts)
class(file_counts)
total_count <- apply(as.data.frame(file_counts), 1, sum)
data_frame <- t(as.data.frame(file_counts))
reshaped_data_frame <- reshape2::melt(data_frame, value.name = "frequencey")
names(reshaped_data_frame)
final_data_for_plotting <- reshaped_data_frame %>%
rename(targeted_words = Var2) %>%
rename(individual_article = Var1) %>%
group_by(targeted_words) %>%
mutate(total_counts = sum(frequencey))
View(final_data_for_plotting)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(targeted_words, frequency,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
