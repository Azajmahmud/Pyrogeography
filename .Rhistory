setwd("C:/Users/tomas/git/Pyrogeography")
library(stringr)
library(dplyr)
library(pdftools)
library(tm)
pyrogeography_word_counts <- function(text, pyrogeography_words) {
text <- tolower(text)
counts <- sapply(pyrogeography_words, function(word) {
word_count <- str_count(text, regex(paste0(word)))
return(sum(word_count))
})
return(counts)
}
file_list <- list.files(path = "./data/articles",
pattern = "*.pdf$",
full.names = TRUE)
file_list
pyrogeography_words <- c("human", "fire", "climate",
"fire regime", "change",
"effect", "pattern",
"pyrogeography",
"anthropocene", "pyrodiversity",
"pyrome", "spatial",
"temporal")
# Initialize an empty list to store the counts for each file
file_counts <- list()
# Loop through the file list and process each file
for (i in 1:length(file_list)) {
file_text <- pdf_text(file_list[i])
# Count the occurrences of target words in the file and store the counts in a named list
counts <- pyrogeography_word_counts(file_text,
pyrogeography_words)
file_counts[[file_list[i]]] <- counts
# Print the counts for each word in the current file
cat("File:", file_list[i], "\n")
for (j in 1:length(pyrogeography_words)) {
cat(pyrogeography_words[j], ":", counts[j], "\n")
}
cat("\n")
}
print(file_counts)
class(file_counts)
total_count <- apply(as.data.frame(file_counts), 1, sum)
data_frame <- t(as.data.frame(file_counts))
reshaped_data_frame <- reshape2::melt(data_frame, value.name = "frequencey")
names(reshaped_data_frame)
final_data_for_plotting <- reshaped_data_frame %>%
rename(targeted_words = Var2) %>%
rename(individual_article = Var1) %>%
group_by(targeted_words) %>%
mutate(total_counts = sum(frequencey))
reading_each_file <- sapply(file_list, pdf_text) # reading all files
length(reading_each_file) # checking how many of them I read
lapply(reading_each_file, length) # how many files per each files
pdfdatabase <- Corpus(URISource(file_list),
readerControl = list(reader = readPDF))
most_frequent_word <- TermDocumentMatrix(pdfdatabase,
control = list(removePunctuation = TRUE,
stopwords = TRUE,
tolower = TRUE,
stemming = FALSE,
removeNumbers = TRUE,
bounds = list(global = c (3, Inf))))
inspect(most_frequent_word[1:20, ])
class(most_frequent_word)
at_least_three_times <- findFreqTerms(most_frequent_word,
lowfreq = 3, highfreq = Inf)
sorted_at_least_three_times <- sort(apply(as.matrix(most_frequent_word[at_least_three_times,]), 1, sum),
decreasing = TRUE)
class(sorted_at_least_three_times)
View(sorted_at_least_three_times)
most_frequent_words <- as.data.frame(sorted_at_least_three_times)
most_frequent_words <- most_frequent_words %>%
rename(frequency = sorted_at_least_three_times) %>%
filter(frequency >= 1000)
#######################################################
# Cleaning the environment
######################################################
rm(list = ls())
source("./scripts/targeted_words.R")
############################################################################
# Required libraries
############################################################################
library(ggplot2)
percentage_of_publication_by_field <- read.csv("./data/percentage_of_publication_by_fields.csv")
number_of_publication_by_year <- read.csv("./data/number_of_publication_by_year.csv")
percentage_of_publications_by_fields_plot <- ggplot(percentage_of_publication_by_field, aes(x = reorder(web_of_science_categories,
-record_count),
y = record_count,
fill = web_of_science_categories)) +
geom_bar(stat = "identity") +
labs(x = "Web of Science Categories",
y = "Record Count",
fill = "Web of Science Categories") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "bold"))
ggsave("./results/percentage_of_publication_by_fields.pdf",
percentage_of_publications_by_fields_plot, height = 230,
width = 250, units = "mm", dpi = 300)
number_of_publication_by_year_plot <- ggplot(number_of_publication_by_year, aes(x = year, y = number_of_publication)) +
geom_line() +
labs( x = "Year",
y = "Number of Publications") +
theme_bw() +
scale_y_continuous(breaks = seq(0, max(number_of_publication_by_year$number_of_publication), by = 2), labels = scales::comma) +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "bold"))
ggsave("./results/number_of_publication_by_year_plot.pdf",
number_of_publication_by_year_plot, height = 220,
width = 250, units = "mm", dpi = 300)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(x = reorder(targeted_words, -frequencey),
y = frequencey,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
source("./scripts/targeted_words.R")
############################################################################
# Required libraries
############################################################################
library(ggplot2)
percentage_of_publication_by_field <- read.csv("./data/percentage_of_publication_by_fields.csv")
number_of_publication_by_year <- read.csv("./data/number_of_publication_by_year.csv")
percentage_of_publications_by_fields_plot <- ggplot(percentage_of_publication_by_field, aes(x = reorder(web_of_science_categories,
-record_count),
y = record_count,
fill = web_of_science_categories)) +
geom_bar(stat = "identity") +
labs(x = "Web of Science Categories",
y = "Record Count",
fill = "Web of Science Categories") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "bold"))
ggsave("./results/percentage_of_publication_by_fields.pdf",
percentage_of_publications_by_fields_plot, height = 230,
width = 250, units = "mm", dpi = 300)
number_of_publication_by_year_plot <- ggplot(number_of_publication_by_year, aes(x = year, y = number_of_publication)) +
geom_line() +
labs( x = "Year",
y = "Number of Publications") +
theme_bw() +
scale_y_continuous(breaks = seq(0, max(number_of_publication_by_year$number_of_publication), by = 2), labels = scales::comma) +
theme(axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "bold"))
ggsave("./results/number_of_publication_by_year_plot.pdf",
number_of_publication_by_year_plot, height = 220,
width = 250, units = "mm", dpi = 300)
targeted_words_plot <- ggplot(final_data_for_plotting,
aes(x = reorder(targeted_words, -frequencey),
y = frequencey,
color = targeted_words)) +
geom_boxplot() +
theme_bw() +
labs(x = "Targeted words",
y = "Mean frequuency",
color = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
targeted_words_plot
ggsave("./results/targeted_words_plot.pdf",
plot = targeted_words_plot, height = 200,
width = 260, units = "mm", dpi = 300)
total_counts_of_targeted_words <- ggplot(final_data_for_plotting,
aes(x = reorder(targeted_words, - total_counts),
y = total_counts,
fill = targeted_words)) +
geom_bar(stat="identity", position="dodge") +
theme_bw() +
labs(x = "Targeted words",
y = "Total counts",
fill = "Targeted words") +
theme(axis.text.x = element_text(size = 8,
angle = 45,
face = "bold",
hjust = 1),
axis.text.y = element_text(size = 8,
face = "bold"),
axis.title = element_text(size = 12, face = "bold"))
total_counts_of_targeted_words
ggsave("./results/total_counts_of_targeted_words.pdf",
plot = total_counts_of_targeted_words, height = 200,
width = 260, units = "mm", dpi = 300)
write.csv(most_frequent_words,
file = "./results/most_frequent_words.csv",
row.names = TRUE)
write.csv(final_data_for_plotting,
file = "./results/targeted_words_for_plotting.csv")
